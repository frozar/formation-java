@startuml
package entites {
    class Personne {
        #String nom
        #String prenom
    }
    class Banque {
        #String codeBanque
    }
    abstract class CompteBancaire {
        #String codeBanque
        #String codeGuichet
        #String numCompte
        #String cle
        #Double solde
        +String getRib()
    }
    class CompteCourant {
    }
    class CompteEpargne {
        #Double txInteret
    }
    class Operation {
        #Integer numOperation
        #Date dateOperation
        #String libelle
        #Double montant
    }
    class CarteBancaire {
        -String codePin
        #String numCarte
        #Date dateExpiration
        +verifierPin(pin)
    }
}

package services {
    interface BanqueServiceInterface {
        +CompteCourant creerCompteCourant(Banque banque, Personne titulaire, String guichet, Double soldeInitial) throws CompteException
        +CompteCourant creerCompteCourant(Banque banque, Personne titulaire, String guichet) throws CompteException
        +CompteEpargne creerCompteEpargne(Banque banque, Personne titulaire, String guichet, Double soldeInitial, Double taux) throws CompteException
        +CarteBancaire creerCarte(Banque banque, Personne titulaire, CompteCourant compte) throws CompteException
        +void afficherSyntheseComptes(Banque banque)
        +void afficherSyntheseCartes(Banque banque)
    }
    interface CompteBancaireServiceInterface {
        +Operation creerOperation(CompteBancaire compte, String libelle, Double montant) throws CompteException
        +void afficherSyntheseOperations(CompteBancaire compte)
        +double calculerInteret(CompteEpargne compte)
    }
    interface PersonneServiceInterface {
        +Personne creerPersonne(String nom, String prenom)
    }
}

package services.impl {
    class BanqueService <<Component>> {
        +CarteBancaire lierCarte(CarteBancaire carte, CompteBancaire compte)
    }
    class CompteBancaireService <<Component>> {
        -Double calculerSolde(CompteBancaire compte)
    }
    class PersonneService <<Component>> {
    }
    class SystemeBancaire <<Component>> {
    }
}


interface SystemeBancaireInterface {
    +List<String> rechercherRIBCompteCarte(Banque banque, String numCarte) throws SystemeBancaireException;
    +boolean verifierCodePin(Banque banque, String numCarte, String codePin) throws SystemeBancaireException;
    +int creerOperation(Banque banque, String ribCompte, String libelle, Double montant) throws SystemeBancaireException;
}

class Gabier <<Component>> {
    +void accessCompte(Banque banque, String numCarte, codePin) throws SystemeBancaireException
    +int retirerEspeces(Banque banque, String ribCompte, Double montant) throws SystemeBancaireException    
}


CompteBancaire "1" *-- "0..n" Operation
CompteBancaire <|--  CompteCourant
CompteBancaire <|--  CompteEpargne
CompteBancaire "1..n" -- "1" Personne : titulaire
Personne "1" -- "0..n" CarteBancaire
CompteCourant "1..n" -- "0..n" CarteBancaire
Gabier --> SystemeBancaireInterface : systemeBancaire 
Banque "1" *-- "0..n" CompteBancaire
Banque "1" *-- "0..n" CarteBancaire

Exception <|-- CompteException
Exception <|-- SystemeBancaireException

BanqueServiceInterface <|-- BanqueService
CompteBancaireServiceInterface <|-- CompteBancaireService
PersonneServiceInterface <|-- PersonneService
BanqueService --> CompteBancaireServiceInterface : "utilise"
SystemeBancaireInterface <|-- SystemeBancaire
SystemeBancaire --> CompteBancaireServiceInterface : "utilise"
@enduml
